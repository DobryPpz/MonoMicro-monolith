1. Napisać model przechowywania użytkowników (x)
2. Napisać rejestrację i logowanie z jwt (x)
3. Napisać komponent game roomu(dołączanie graczy do gameroomu, ich interakcję i widok) ()
4. Napisać model tabeli wyników graczy (x)
5. Napisać funkcjonalność pobierania tabeli wyników graczy(rosnąco, malejąco i tam gdzie ja jestem) (x)
7. Stworzyć stronę dla logowania i rejestracji (x)
8. Stworzyć stronę wyświetlającą tabelę wyników (x)
10. Stworzyć stronę ustawień gracza (x)
11. Napisać model skórek statku (x)
12. Napisać komponent ustawiania skórki statku (x)
13. Napisać model skórek pocisku (x)
14. Napisać komponent ustawiania skórki pocisku (x)
15. Napisać model dźwięków strzału (x)
16. Napisać komponent ustawiania dźwięku strzału (x)
17. Napisać model dźwięków zniszczenia statku (x)
18. Napisac komponent ustawiania dźwięku zniszczenia statku (x)
6. Napisać funkcjonalność poczekalni(przekierowywania graczy do pokojów) ()
9. Stworzyć stronę oczekiwania na znalezienie gry ()

Pokoje istnieją tylko wtedy gdy jest w nich dwóch graczy i serwer jest włączony więc nie musimy
przechowywać ich w bazie. 

musimy mieć z tyłu obiekt gdzie kluczem jest unikalne id pokoju a wartością jest obiekt pokoju

Musimy mieć z tyłu jakiś obiekt który na żywo przechowuje dla każdego levela od 1 do któregośtam
wszystkich graczy którzy zgłosili chęć gry. W tym samym czasie nieustannie dobieramy z listy
każdego levela dwóch graczy którzy będą teraz razem w grze i wtedy usuwamy ich z tej listy.
Obiekty wewnątrz tej listy muszą przechowywać nazwę użytkownika, level i socket id.

Najpierw gracz wysyła request http zgłaszając chęć dołączenia do pokoju. W body requesta zawiera informacje 
o swojej nazwie(konieczne żeby potem na serwerze go znaleźć), swoim levelu i swoim id socketa. wtedy trafia do tego
magicznego obiektu z listami pod odpowiednim levelem(całe body requesta tam trafia). serwer zapisuje id socketa gracza w 
tym naszym omawianym obiekcie. Zwraca response z informacją że gracz został dodany do kolejki. 
Teraz serwer cały czas szuka par graczy. Po znalezieniu pary pobieramy z bazy uzytkowników wszystkie informacje 
o graczach które są potrzebne(kolor pocisku,statku i te wszystkie inne). Tworzymy obiekt pokoju.
Do obiektu pokoju dodajemy obiekty obu graczy.
generujemy jakieś unikalne id pokoju. 
Zapisujemy w obiekcie {pokoje} ten pokój gdzie kluczem jest unikalne id pokoju a wartością obiekt pokoju. 
wtedy z serwera wysyłamy tylko do zainteresowanych graczy(do ich socket id) kod pokoju za pomocą eventa
room-ready. gracze po odebraniu eventa z kodem pokoju wystosowują event join-room zawierając w danych ten właśnie kod pokoju.
serwer odbiera ten event i robi dwie rzeczy:
    1.socket.join(ten kod pokoju)
    2.start gry




